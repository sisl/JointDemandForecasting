import torch
import torch.tensor as tensor

def printStats(wapes, rwses, dscores, nlls=None):
    if nlls is not None:
        print('%.03f \pm %.03f & %.03f \pm %.03f & %.02f \pm %.02f & %.04f \pm %.04f' % (wapes.mean(), wapes.std(), rwses.mean(), rwses.std(), -nlls.mean(), nlls.std(), dscores.mean(), dscores.std()))

    else:
        print('%.03f \pm %.03f & %.03f \pm %.03f & --- & %.04f \pm %.04f' % (wapes.mean(), wapes.std(), rwses.mean(), rwses.std(), dscores.mean(), dscores.std()))


# 12 | 8, Salt Lake City

# CondG Metrics:
WAPE =  tensor(0.4313)
RWSE =  tensor(0.4852)
NLL =  tensor(-11.2402)
TrNLL =  tensor(-11.9784)
DScore =  tensor(0.3232)

# ARMA Metrics:
WAPE =  tensor(0.4599)
RWSE =  tensor(0.5370)
DScore =  tensor(0.3962)

# IFNN Metrics:
WAPEs =  tensor([0.2158, 0.2518, 0.7917, 0.1988, 0.2605, 0.2600, 0.1956, 0.2276, 0.2336])
RWSEs =  tensor([3.7659e-01, 3.7081e-01, 4.4213e+03, 3.6479e-01, 7.8715e-01, 4.3065e-01,
        3.4708e-01, 3.8267e-01, 3.9234e-01])
DScores =  tensor([0.0798, 0.0795, 0.0667, 0.1902, 0.1121, 0.0853, 0.0617, 0.1547, 0.0816])

WAPEs =  tensor([0.2158, 0.2518, 0.1988, 0.2605, 0.2600, 0.1956, 0.2276, 0.2336])
RWSEs =  tensor([3.7659e-01, 3.7081e-01, 3.6479e-01, 7.8715e-01, 4.3065e-01,
        3.4708e-01, 3.8267e-01, 3.9234e-01])
DScores =  tensor([0.0798, 0.0795, 0.1902, 0.1121, 0.0853, 0.0617, 0.1547, 0.0816])
printStats(WAPEs, RWSEs, DScores)

# IRNN Metrics:
WAPEs =  tensor([0.2370, 0.3164, 0.2171, 0.2399, 0.2441, 0.2609, 0.3307, 0.2393, 0.2636,
        0.2680])
RWSEs =   tensor([0.3817, 0.4314, 0.3610, 0.3456, 0.3881, 0.3834, 0.4130, 0.3938, 0.4306,
        0.4656])
DScores =  tensor([0.1555, 0.1465, 0.1547, 0.0938, 0.0996, 0.1002, 0.1685, 0.1294, 0.2716,
        0.3121])
printStats(WAPEs, RWSEs, DScores)

# JFNN Metrics:
WAPEs =  tensor([0.2699, 0.2376, 0.2600, 0.2601, 0.2584, 0.2445, 0.2533, 0.2599, 0.3009,
        0.2757])
RWSEs =  tensor([0.4055, 0.3775, 0.4098, 0.3883, 0.3849, 0.3784, 0.3959, 0.3896, 0.4312,
        0.4147])
NLLs =  tensor([-14.8010, -12.3143, -10.6713, -11.5135, -12.9179, -12.7320,  -9.2559,
        -14.5112, -12.1010, -13.3630])
TrNLLs =  tensor([-24.0300, -23.2089, -22.3216, -22.5751, -23.4288, -23.6742, -23.2646,
        -23.8612, -22.7100, -23.0631])
DScores =  tensor([0.0921, 0.0654, 0.0761, 0.0675, 0.0908, 0.0778, 0.0716, 0.0673, 0.1349,
        0.1050])
printStats(WAPEs, RWSEs, DScores, NLLs)

# JRNN Metrics:
WAPEs =  tensor([0.2513, 0.2066, 0.2053, 0.2005, 0.2185, 0.2153, 0.2090, 0.2073, 0.5112,
        0.2123])
RWSEs =  tensor([ 0.3789,  0.3266,  0.3248,  0.3462,  0.3498,  0.3350,  0.3297,  0.3334,
        17.2146,  0.3316])
NLLs =  tensor([-12.0468, -12.9355, -13.4498, -16.2059, -14.9507, -14.7269, -11.5051,
        -15.3686, -12.6897, -13.7347])
TrNLLs =  tensor([-20.7746, -25.0703, -24.7884, -25.4393, -24.5390, -24.5861, -24.7624,
        -25.0334, -25.0921, -24.7699])
DScores =  tensor([0.0667, 0.0318, 0.0274, 0.0350, 0.0613, 0.0570, 0.0433, 0.0535, 0.0332,
        0.0417])

WAPEs =  tensor([0.2513, 0.2066, 0.2053, 0.2005, 0.2185, 0.2153, 0.2090, 0.2073, 
        0.2123])
RWSEs =  tensor([ 0.3789,  0.3266,  0.3248,  0.3462,  0.3498,  0.3350,  0.3297,  0.3334,
         0.3316])
NLLs =  tensor([-12.0468, -12.9355, -13.4498, -16.2059, -14.9507, -14.7269, -11.5051,
        -15.3686, -13.7347])
TrNLLs =  tensor([-20.7746, -25.0703, -24.7884, -25.4393, -24.5390, -24.5861, -24.7624,
        -25.0334, -24.7699])
DScores =  tensor([0.0667, 0.0318, 0.0274, 0.0350, 0.0613, 0.0570, 0.0433, 0.0535,
        0.0417])
printStats(WAPEs, RWSEs, DScores, NLLs)

# MOGP Metrics:
WAPEs =  tensor([0.3992, 0.4465, 0.4316, 0.4246, 0.4298, 0.4630, 0.4332, 0.4330, 0.4258,
        0.4237])
RWSEs =  tensor([0.4693, 0.5247, 0.5073, 0.5001, 0.5042, 0.5311, 0.5056, 0.5076, 0.5009,
        0.4938])
NLLs =  tensor([-0.8854, -0.2417, -0.9752, -0.8654, -0.0757,  0.5288, -0.8342, -0.5111,
        -0.9620, -0.9314])
TrNLLs =  tensor([-1.9133, -1.2568, -1.9340, -1.9220, -1.1908, -0.5671, -1.8942, -1.6067,
        -2.0419, -2.0571])
DScores =  tensor([0.1076, 0.1362, 0.1304, 0.1237, 0.0979, 0.1101, 0.1212, 0.1364, 0.1123,
        0.1282])
printStats(WAPEs, RWSEs, DScores, NLLs)

# CondGMM Metrics:
WAPEs =  tensor([0.2112, 0.2195, 0.2181, 0.2184, 0.2169, 0.2169, 0.2112, 0.2182, 0.2183,
        0.2196])
RWSEs =  tensor([0.3333, 0.3581, 0.3523, 0.3432, 0.3394, 0.3393, 0.3329, 0.3521, 0.3432,
        0.3507])
NLLs =  tensor([-14.1980, -14.5679, -14.4345, -14.1438, -14.7109, -14.7109, -14.1979,
        -14.4336, -14.1476, -14.6202])
TrNLLs =  tensor([-22.4376, -22.5954, -22.4076, -22.2924, -22.6977, -22.6977, -22.4345,
        -22.4076, -22.2924, -22.5690])
DScores =  tensor([0.0773, 0.0809, 0.0736, 0.0773, 0.0805, 0.0808, 0.0815, 0.0736, 0.0769,
        0.0705])
printStats(WAPEs, RWSEs, DScores, NLLs)

# CANF Metrics:
WAPEs =  tensor([0.1884, 0.1616, 0.1669, 0.1883, 0.1707, 0.1790, 0.1612, 0.1722, 0.1703,
        0.1695])
RWSEs =  tensor([0.3103, 0.2802, 0.2881, 0.3087, 0.2906, 0.3080, 0.2875, 0.2908, 0.2976,
        0.2859])
NLLs =  tensor([-21.6735, -22.3723, -21.7066, -20.9163, -21.8100, -22.0059, -22.4157,
        -21.5248, -21.8421, -22.2894])
TrNLLs =  tensor([-27.1343, -27.6166, -26.9143, -26.9969, -26.7662, -26.9842, -27.9093,
        -27.2986, -27.5056, -27.5676])
DScores =  tensor([0.0537, 0.0255, 0.0266, 0.0653, 0.0315, 0.0329, 0.0316, 0.0386, 0.0299,
        0.0339])
printStats(WAPEs, RWSEs, DScores, NLLs)
