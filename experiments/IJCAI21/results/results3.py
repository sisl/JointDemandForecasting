import torch
import torch.tensor as tensor

def printStats(wapes, rwses, dscores, nlls=None):
    if nlls is not None:
        print('%.03f \pm %.03f & %.03f \pm %.03f & %.02f \pm %.02f & %.04f \pm %.04f' % (wapes.mean(), wapes.std(), rwses.mean(), rwses.std(), -nlls.mean(), nlls.std(), dscores.mean(), dscores.std()))

    else:
        print('%.03f \pm %.03f & %.03f \pm %.03f & --- & %.04f \pm %.04f' % (wapes.mean(), wapes.std(), rwses.mean(), rwses.std(), dscores.mean(), dscores.std()))


# 12 | 24, Bakersfield

# CondG Metrics:
WAPE =  tensor(0.1498)
RWSE =  tensor(0.1990)
NLL =  tensor(-18.9578)
TrNLL =  tensor(-21.2370)
DScore =  tensor(0.0057)

# ARMA Metrics:
WAPE =  tensor(0.1626)
RWSE =  tensor(0.2182)
DScore =  tensor(0.0078)

# IFNN Metrics:
WAPEs =  tensor([0.1167, 0.1273, 0.1155, 0.1224, 0.1414, 0.1244, 0.1159, 0.1183, 0.1279])
RWSEs =  tensor([0.2443, 0.2753, 0.2543, 0.2414, 0.3133, 0.2829, 0.2331, 0.2521, 0.2487])
DScores =  tensor([0.0022, 0.0047, 0.0029, 0.0050, 0.0052, 0.0063, 0.0051, 0.0036, 0.0020])
printStats(WAPEs, RWSEs, DScores)

# IRNN Metrics:
WAPEs =  tensor([0.1755, 0.2237, 0.3001, 0.1271, 0.1863, 0.2279, 0.3283, 0.4565, 0.1600])
RWSEs =   tensor([0.3400, 0.3846, 0.5070, 0.2280, 0.3399, 0.4388, 0.4539, 0.6100, 0.2730])
DScores =  tensor([0.0254, 0.0904, 0.0938, 0.0099, 0.0642, 0.0583, 0.1097, 0.5026, 0.0326])

WAPEs =  tensor([0.1755, 0.2237, 0.3001, 0.1271, 0.1863, 0.2279, 0.3283, 0.1600])
RWSEs =   tensor([0.3400, 0.3846, 0.5070, 0.2280, 0.3399, 0.4388, 0.4539, 0.2730])
DScores =  tensor([0.0254, 0.0904, 0.0938, 0.0099, 0.0642, 0.0583, 0.1097, 0.0326])
printStats(WAPEs, RWSEs, DScores)

# JFNN Metrics:
WAPEs =  tensor([0.1422, 0.1389, 0.1522, 0.1520, 0.1399, 0.1381, 0.1401, 0.1524, 0.1443,
        0.1433])
RWSEs =  tensor([0.2649, 0.2678, 0.2588, 0.2757, 0.2635, 0.2682, 0.2658, 0.2745, 0.2779,
        0.2755])
NLLs =  tensor([-19.2776, -19.5109, -19.2046, -19.4765, -19.1067, -20.0307, -19.8599,
        -19.7837, -19.5751, -19.4917])
TrNLLs =  tensor([-26.2407, -26.7125, -25.1430, -25.6259, -26.3238, -26.9231, -26.6599,
        -26.0263, -26.0338, -25.8215])
DScores =  tensor([0.0049, 0.0036, 0.0057, 0.0037, 0.0016, 0.0052, 0.0050, 0.0043, 0.0049,
        0.0037])
printStats(WAPEs, RWSEs, DScores, NLLs)

# JRNN Metrics:
WAPEs =  tensor([1.6895e-01, 2.0502e+05, 2.0032e+10, 1.6649e-01, 2.4910e-01, 2.0003e-01,
        1.7785e-01, 2.0418e-01, 1.7741e-01, 2.4169e-01])
RWSEs =  tensor([3.5410e-01, 6.1891e+07, 1.9420e+12, 3.3996e-01, 4.1825e+00, 3.4495e-01,
        3.6914e-01, 4.6132e-01, 3.6772e-01, 5.2218e-01])
NLLs =  tensor([-18.1019, -17.0919, -14.7230, -17.2748, -16.7828, -17.4491, -17.5286,
        -17.3490, -19.0195, -17.2628])
TrNLLs =  tensor([-25.4505, -25.3166, -25.1979, -25.2169, -24.4716, -25.5968, -25.8737,
        -25.2137, -26.2755, -25.4297])
DScores =  tensor([0.0059, 0.0172, 0.0077, 0.0057, 0.0116, 0.0084, 0.0051, 0.0077, 0.0058,
        0.0257])

WAPEs =  tensor([1.6895e-01, 1.6649e-01, 2.0003e-01,
        1.7785e-01, 2.0418e-01, 1.7741e-01, 2.4169e-01])
RWSEs =  tensor([3.5410e-01, 3.3996e-01, 3.4495e-01,
        3.6914e-01, 4.6132e-01, 3.6772e-01, 5.2218e-01])
NLLs =  tensor([-18.1019, -17.2748, -17.4491, -17.5286,
        -17.3490, -19.0195, -17.2628])
TrNLLs =  tensor([-25.4505, -25.2169, -25.5968, -25.8737,
        -25.2137, -26.2755, -25.4297])
DScores =  tensor([0.0059, 0.0057, 0.0084, 0.0051, 0.0077, 0.0058,
        0.0257])
printStats(WAPEs, RWSEs, DScores, NLLs)

# MOGP Metrics:
WAPEs =  tensor([0.1916, 0.1980, 0.1819, 0.1869, 0.1873, 0.3786, 0.1864, 0.2719, 0.1785,
        0.1866])
RWSEs =  tensor([0.2812, 0.2939, 0.2753, 0.2738, 0.2707, 0.4233, 0.2804, 0.3362, 0.2590,
        0.2700])
NLLs =  tensor([-6.2334, -6.9310, -7.5125, -7.1602, -7.2737,  0.8628, -8.4740, -5.2332,
        -7.8505, -6.7718])
TrNLLs =  tensor([ -7.6966,  -8.7631,  -9.5601,  -9.2041,  -9.1592,   2.4493, -10.3612,
         -5.9435,  -9.8621,  -8.6867])
DScores =  tensor([0.0057, 0.0058, 0.0049, 0.0059, 0.0263, 0.0820, 0.0159, 0.0408, 0.0177,
        0.0403])

WAPEs =  tensor([0.1916, 0.1980, 0.1819, 0.1869, 0.1873,  0.1864, 0.2719, 0.1785,
        0.1866])
RWSEs =  tensor([0.2812, 0.2939, 0.2753, 0.2738, 0.2707,  0.2804, 0.3362, 0.2590,
        0.2700])
NLLs =  tensor([-6.2334, -6.9310, -7.5125, -7.1602, -7.2737,  -8.4740, -5.2332,
        -7.8505, -6.7718])
TrNLLs =  tensor([ -7.6966,  -8.7631,  -9.5601,  -9.2041,  -9.1592, -10.3612,
         -5.9435,  -9.8621,  -8.6867])
DScores =  tensor([0.0057, 0.0058, 0.0049, 0.0059, 0.0263, 0.0159, 0.0408, 0.0177,
        0.0403])
printStats(WAPEs, RWSEs, DScores, NLLs)

# CondGMM Metrics:
WAPEs =  tensor([0.1217, 0.1217, 0.1258, 0.1186, 0.1274, 0.1365, 0.1218, 0.1229])
RWSEs =  tensor([0.1954, 0.1953, 0.1979, 0.1801, 0.2011, 0.2088, 0.1940, 0.1963])
NLLs =  tensor([-21.3588, -22.0506, -22.3369, -20.8376, -22.9690, -23.4959, -22.1345,
        -22.0729])
TrNLLs =  tensor([-25.7042, -26.9664, -27.0207, -24.0503, -28.1653, -29.9913, -26.8991,
        -26.8263])
DScores =  tensor([0.0045, 0.0039, 0.0039, 0.0061, 0.0039, 0.0050, 0.0029, 0.0030])
printStats(WAPEs, RWSEs, DScores, NLLs)

# CANF Metrics:
WAPEs =  tensor([0.1065, 0.1052, 0.1070, 0.1095, 0.1054, 0.1080, 0.1070, 0.1061, 0.1071,
        0.1079])
RWSEs =  tensor([0.1897, 0.1883, 0.1858, 0.1852, 0.1847, 0.1856, 0.1857, 0.1792, 0.1840,
        0.1939])
NLLs =  tensor([-23.5701, -23.6598, -22.9498, -23.2118, -23.2307, -22.3734, -23.2773,
        -23.4618, -23.4460, -22.9654])
TrNLLs =  tensor([-28.7259, -28.9720, -28.1022, -28.3247, -28.4998, -26.9817, -28.4849,
        -28.4212, -28.6649, -28.0733])
DScores =  tensor([0.0007, 0.0005, 0.0016, 0.0029, 0.0029, 0.0009, 0.0007, 0.0014, 0.0009,
        0.0009])
printStats(WAPEs, RWSEs, DScores, NLLs)
