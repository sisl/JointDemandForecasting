import torch
import torch.tensor as tensor

def printStats(wapes, rwses, dscores, nlls=None):
    if nlls is not None:
        print('%.03f \pm %.03f & %.03f \pm %.03f & %.02f \pm %.02f & %.04f \pm %.04f' % (wapes.mean(), wapes.std(), rwses.mean(), rwses.std(), -nlls.mean(), nlls.std(), dscores.mean(), dscores.std()))

    else:
        print('%.03f \pm %.03f & %.03f \pm %.03f & --- & %.04f \pm %.04f' % (wapes.mean(), wapes.std(), rwses.mean(), rwses.std(), dscores.mean(), dscores.std()))


# 12 | 24, Salt Lake City

# CondG Metrics:
WAPE =  tensor(0.1027)
RWSE =  tensor(0.1388)
NLL =  tensor(-16.6263)
TrNLL =  tensor(-24.9047)
DScore =  tensor(0.0037)

# ARMA Metrics:
WAPE =  tensor(0.1088)
RWSE =  tensor(0.1486)
DScore =  tensor(0.0079)

# IFNN Metrics:
WAPEs =  tensor([0.1619, 0.2570, 0.0932, 0.0824, 0.1045, 0.0976, 0.0896, 0.0918, 0.1054])
RWSEs =  tensor([0.1995, 1.5834, 0.1720, 0.1498, 0.1576, 0.1579, 0.1536, 0.1612, 0.2043])
DScores =  tensor([0.0208, 0.0191, 0.0022, 0.0011, 0.0075, 0.0083, 0.0044, 0.0059, 0.0096])

WAPEs =  tensor([0.1619, 0.0932, 0.0824, 0.1045, 0.0976, 0.0896, 0.0918, 0.1054])
RWSEs =  tensor([0.1995, 0.1720, 0.1498, 0.1576, 0.1579, 0.1536, 0.1612, 0.2043])
DScores =  tensor([0.0208, 0.0022, 0.0011, 0.0075, 0.0083, 0.0044, 0.0059, 0.0096])
printStats(WAPEs, RWSEs, DScores)

# IRNN Metrics:
WAPEs =  tensor([0.1779, 0.1876, 0.1792, 0.1680, 0.1395, 0.1675, 0.3635, 0.1190, 0.3073,
        0.2292])
RWSEs =   tensor([0.2505, 0.2663, 0.3197, 0.2245, 0.2057, 0.2853, 0.4184, 0.2118, 0.4122,
        0.3039])
DScores =  tensor([0.0298, 0.0415, 0.0168, 0.0284, 0.0286, 0.0617, 0.2962, 0.0177, 0.1018,
        0.0952])

WAPEs =  tensor([0.1779, 0.1876, 0.1792, 0.1680, 0.1395, 0.1675,  0.1190,
        0.2292])
RWSEs =   tensor([0.2505, 0.2663, 0.3197, 0.2245, 0.2057, 0.2853, 0.2118,
        0.3039])
DScores =  tensor([0.0298, 0.0415, 0.0168, 0.0284, 0.0286, 0.0617, 0.0177,
        0.0952])
printStats(WAPEs, RWSEs, DScores)

# JFNN Metrics:
WAPEs =  tensor([0.1254, 0.1233, 0.1298, 0.1438, 0.1197, 0.1153, 0.1147, 0.1151, 0.2423,
        0.1172])
RWSEs =  tensor([0.2038, 0.1971, 0.2062, 0.2050, 0.1777, 0.1854, 0.1838, 0.1830, 0.3177,
        0.1896])
NLLs =  tensor([-19.5798, -20.5298, -19.4057, -19.4009, -19.0080, -19.7235, -20.9048,
        -16.7525, -19.8785, -20.8680])
TrNLLs =  tensor([-28.5310, -28.9044, -27.5766, -25.9660, -26.9894, -28.2722, -28.6416,
        -27.3686, -26.2751, -28.5816])
DScores =  tensor([0.0055, 0.0037, 0.0086, 0.0174, 0.0070, 0.0077, 0.0078, 0.0055, 0.0398,
        0.0037])
printStats(WAPEs, RWSEs, DScores, NLLs)

# JRNN Metrics:
WAPEs =  tensor([2.2821e+14, 1.4153e-01, 1.4052e-01, 1.3575e-01, 1.4538e-01, 2.1612e-01,
        1.2472e-01, 1.2343e-01, 1.2301e-01, 1.3947e-01])
RWSEs =  tensor([  float('inf'), 1.5227, 0.2181, 0.2289, 0.2262, 4.1492, 0.2024, 0.1913, 0.2069,
        0.2338])
NLLs =  tensor([ -5.7041, -18.4702, -17.4715, -18.2635, -17.9842,   3.2657, -18.1768,
          9.9029, -18.2881, -19.8567])
TrNLLs =  tensor([-27.3824, -26.6275, -27.5541, -27.1329, -26.4233, -26.2099, -27.5995,
        -28.0479, -27.3152, -28.3705])
DScores =  tensor([0.0090, 0.0083, 0.0109, 0.0096, 0.0102, 0.0096, 0.0091, 0.0090, 0.0086,
        0.0090])

WAPEs =  tensor([ 1.4052e-01, 1.3575e-01, 1.4538e-01,
        1.2472e-01,  1.2301e-01, 1.3947e-01])
RWSEs =  tensor([ 0.2181, 0.2289, 0.2262, 0.2024, 0.2069,
        0.2338])
NLLs =  tensor([ -17.4715, -18.2635, -17.9842,  -18.1768,
          -18.2881, -19.8567])
TrNLLs =  tensor([-27.5541, -27.1329, -26.4233, -27.5995,
         -27.3152, -28.3705])
DScores =  tensor([0.0109, 0.0096, 0.0102, 0.0091, 0.0086,
        0.0090])
printStats(WAPEs, RWSEs, DScores, NLLs)

# MOGP Metrics:
WAPEs =  tensor([0.1598, 0.1487, 0.1438, 0.1383, 0.1400, 0.1657, 0.1325, 0.1549, 0.1419,
        0.1761])
RWSEs =  tensor([0.1968, 0.1848, 0.1796, 0.1714, 0.1741, 0.1938, 0.1672, 0.1857, 0.1779,
        0.1981])
NLLs =  tensor([ -8.4479, -11.3418, -11.6728, -11.8596, -12.1687, -11.2151, -13.1340,
        -11.5420, -11.2900,  -8.6364])
TrNLLs =  tensor([ -9.5264, -12.6999, -13.2064, -13.5279, -13.7029, -12.5691, -15.0606,
        -13.0853, -13.0559,  -9.8430])
DScores =  tensor([0.0079, 0.0077, 0.0051, 0.0037, 0.0053, 0.0443, 0.0066, 0.0154, 0.0377,
        0.0361])
printStats(WAPEs, RWSEs, DScores, NLLs)

# CondGMM Metrics:
WAPEs =  tensor([0.0878, 0.0864, 0.0876, 0.0867, 0.0870, 0.0870, 0.0870, 0.0866, 0.0876,
        0.0867])
RWSEs =  tensor([0.1309, 0.1297, 0.1302, 0.1290, 0.1292, 0.1291, 0.1291, 0.1290, 0.1302,
        0.1290])
NLLs =  tensor([-18.3195, -18.6233, -18.5708, -18.6798, -18.7090, -18.7090, -18.7090,
        -18.6798, -18.5688, -18.6798])
TrNLLs =  tensor([-28.2128, -28.3433, -28.2105, -28.3314, -28.3402, -28.3402, -28.3402,
        -28.3314, -28.2102, -28.3314])
DScores =  tensor([0.0066, 0.0070, 0.0066, 0.0062, 0.0072, 0.0075, 0.0077, 0.0065, 0.0066,
        0.0059])
printStats(WAPEs, RWSEs, DScores, NLLs)

# CANF Metrics:
WAPEs =  tensor([0.0926, 0.0854, 0.0884, 0.0908, 0.0898, 0.0930, 0.0866, 0.0861, 0.0857,
        0.0854])
RWSEs =  tensor([0.1417, 0.1323, 0.1372, 0.1396, 0.1385, 0.1419, 0.1373, 0.1339, 0.1329,
        0.1356])
NLLs =  tensor([-25.6110, -25.1908, -25.6959, -24.6557, -25.9525, -25.3063, -25.5415,
        -25.2357, -25.2227, -25.7241])
TrNLLs =  tensor([-31.0633, -30.4547, -30.9605, -29.8597, -31.2992, -30.8600, -31.1777,
        -30.4919, -30.5133, -31.0906])
DScores =  tensor([0.0039, 0.0026, 0.0055, 0.0044, 0.0022, 0.0033, 0.0026, 0.0029, 0.0036,
        0.0029])
printStats(WAPEs, RWSEs, DScores, NLLs)
