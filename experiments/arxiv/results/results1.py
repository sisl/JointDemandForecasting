import torch
import torch.tensor as tensor

def printStats(wapes, rwses, dscores, nlls=None):
    if nlls is not None:
        print('%.03f \pm %.03f & %.03f \pm %.03f & %.02f \pm %.02f & %.04f \pm %.04f' % (wapes.mean(), wapes.std(), rwses.mean(), rwses.std(), -nlls.mean(), nlls.std(), dscores.mean(), dscores.std()))

    else:
        print('%.03f \pm %.03f & %.03f \pm %.03f & --- & %.04f \pm %.04f' % (wapes.mean(), wapes.std(), rwses.mean(), rwses.std(), dscores.mean(), dscores.std()))



# 12 | 8, Bakersfield

# CG Metrics:
WAPE =  tensor(0.5214)
RWSE =  tensor(0.7161)
NLL =  tensor(-10.4290)
TrNLL =  tensor(-11.3886)
DScore =  tensor(0.3402)

# ARMA Metrics:
WAPE =  tensor(0.5292)
RWSE =  tensor(0.7456)
DScore =  tensor(0.3836)

# IFNN Metrics:
WAPEs =  tensor([0.3007, 0.2454, 0.2765, 0.2760, 0.3303, 0.4523, 0.2920])
RWSEs =  tensor([0.6063, 0.5725, 0.6289, 0.5301, 0.5937, 0.6746, 0.5662])
DScores =  tensor([0.1084, 0.0791, 0.0992, 0.0744, 0.0992, 0.2951, 0.0938])
printStats(WAPEs, RWSEs, DScores)

# IRNN Metrics:
WAPEs =  tensor([0.3734, 0.4680, 0.2405, 0.3345, 0.2601, 0.3468, 0.2749, 0.3444, 0.4751,
        0.4941])
RWSEs =   tensor([0.6322, 0.7334, 0.6018, 0.6321, 0.6004, 0.6219, 0.6242, 0.6285, 0.7363,
        0.8428])
DScores =  tensor([0.1672, 0.5746, 0.1260, 0.2021, 0.2034, 0.2531, 0.1278, 0.2119, 0.6839,
        0.7754])

WAPEs =  tensor([0.3734, 0.2405, 0.3345, 0.2601, 0.3468, 0.2749, 0.3444])
RWSEs =   tensor([0.6322, 0.6018, 0.6321, 0.6004, 0.6219, 0.6242, 0.6285])
DScores =  tensor([0.1672, 0.1260, 0.2021, 0.2034, 0.2531, 0.1278, 0.2119])
printStats(WAPEs, RWSEs, DScores)

# JFNN Metrics:
WAPEs =  tensor([0.3513, 0.3920, 0.3607, 0.3874, 0.3177, 0.3462, 0.3190, 0.3696, 0.3594,
        0.3753])
RWSEs =  tensor([0.6663, 0.6649, 0.6557, 0.7051, 0.6311, 0.6084, 0.6058, 0.6693, 0.6423,
        0.6619])
NLLs =  tensor([-13.4624, -15.1537, -14.5759, -13.9783, -13.8702, -15.1768, -14.7232,
        -15.1926, -14.9524, -14.8353])
TrNLLs =  tensor([-20.6236, -21.5373, -20.5735, -20.9658, -21.3130, -21.8537, -21.5607,
        -22.0448, -21.8993, -21.3936])
DScores =  tensor([0.1004, 0.1361, 0.1014, 0.1145, 0.0718, 0.1007, 0.0608, 0.0964, 0.0951,
        0.1314])
printStats(WAPEs, RWSEs, DScores, NLLs)

# JRNN Metrics:
WAPEs =  tensor([0.2658, 0.2823, 0.2403, 0.2737, 0.8691, 0.2900, 0.2923, 0.2834, 0.2243,
        0.2686])
RWSEs =  tensor([  0.5513,   0.5473,   0.4761,   0.5737, 136.1143,   0.6035,   0.5901,
          0.5426,   0.4610,   0.5397])
NLLs =  tensor([-13.2224, -12.9232, -15.1771, -14.2473,   5.6394, -16.0917, -15.3515,
        -15.3647, -13.5258, -14.3891])
TrNLLs =  tensor([-22.6298, -21.8941, -23.1589, -22.6056, -23.3722, -22.8043, -23.5424,
        -22.2035, -23.0854, -22.2550])
DScores =  tensor([0.0276, 0.0493, 0.0212, 0.0268, 0.0468, 0.0381, 0.0341, 0.0409, 0.0130,
        0.0225])

WAPEs =  tensor([0.2658, 0.2823, 0.2403, 0.2737, 0.2900, 0.2923, 0.2834, 0.2243,
        0.2686])
RWSEs =  tensor([  0.5513,   0.5473,   0.4761,   0.5737,  0.6035,   0.5901,
          0.5426,   0.4610,   0.5397])
NLLs =  tensor([-13.2224, -12.9232, -15.1771, -14.2473, -16.0917, -15.3515,
        -15.3647, -13.5258, -14.3891])
TrNLLs =  tensor([-22.6298, -21.8941, -23.1589, -22.6056, -22.8043, -23.5424,
        -22.2035, -23.0854, -22.2550])
DScores =  tensor([0.0276, 0.0493, 0.0212, 0.0268, 0.0381, 0.0341, 0.0409, 0.0130,
        0.0225])
printStats(WAPEs, RWSEs, DScores, NLLs)

# MOGP Metrics:
WAPEs =  tensor([0.4810, 0.5653, 0.5793, 0.5202, 0.6353, 0.5401, 0.5858, 0.5316, 0.5820,
        0.5695])
RWSEs =  tensor([0.6641, 0.7861, 0.8119, 0.7334, 0.8473, 0.7599, 0.7870, 0.7383, 0.7917,
        0.7782])
NLLs =  tensor([0.7788, 0.7282, 0.4619, 1.3550, 2.4004, 1.4557, 0.9607, 1.7769, 1.5640,
        1.3438])
TrNLLs =  tensor([-0.0253,  0.1182, -0.2218,  0.5622,  1.7854,  0.6563,  0.2706,  0.9861,
         0.8578,  0.7019])
DScores =  tensor([0.1239, 0.1328, 0.1622, 0.1073, 0.1568, 0.1171, 0.1026, 0.1308, 0.2796,
        0.1233])
printStats(WAPEs, RWSEs, DScores, NLLs)

# CGMM Metrics:
WAPEs =  tensor([0.3275, 0.3274, 0.3187, 0.3187, 0.2864, 0.3269, 0.3273, 0.3270, 0.3268,
        0.3270])
RWSEs =  tensor([0.5450, 0.5453, 0.5361, 0.5360, 0.4691, 0.5454, 0.5448, 0.5446, 0.5447,
        0.5450])
NLLs =  tensor([-15.3239, -15.3247, -15.4299, -15.4299, -15.6330, -15.3239, -15.3239,
        -15.3239, -15.3239, -15.3239])
TrNLLs =  tensor([-19.4624, -19.4624, -19.1206, -19.1206, -18.6807, -19.4624, -19.4624,
        -19.4624, -19.4624, -19.4624])
DScores =  tensor([0.1359, 0.1370, 0.1283, 0.1265, 0.1035, 0.1337, 0.1352, 0.1364, 0.1337,
        0.1365])
printStats(WAPEs, RWSEs, DScores, NLLs)

# CANF Metrics:
WAPEs =  tensor([0.1906, 0.1945, 0.1766, 0.1894, 0.2020, 0.1991, 0.1922, 0.1869, 0.1988,
        0.1865])
RWSEs =  tensor([0.3523, 0.3575, 0.3264, 0.3535, 0.3599, 0.3638, 0.3638, 0.3424, 0.3632,
        0.3389])
NLLs =  tensor([-20.4090, -20.8262, -20.8411, -21.0773, -20.1547, -20.6346, -20.0008,
        -20.5882, -20.4313, -20.8177])
TrNLLs =  tensor([-24.6347, -25.4315, -25.2162, -25.5586, -24.6862, -25.1897, -24.2100,
        -24.6313, -24.9296, -24.8297])
DScores =  tensor([0.0118, 0.0119, 0.0118, 0.0118, 0.0132, 0.0100, 0.0130, 0.0116, 0.0125,
        0.0116])
printStats(WAPEs, RWSEs, DScores, NLLs)
